{"version":3,"sources":["logo.svg","components/ImageCard.js","components/ImageSearch.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,I,MCiCAA,EA/BG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,sBAAKC,UAAU,6CAAf,UACF,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wCAAf,sBACYH,EAAMO,QAElB,+BACE,6BACE,6CAAgBP,EAAMQ,WAExB,6BACE,iDAAoBR,EAAMS,eAE5B,6BACE,6CAAgBT,EAAMU,iBAI5B,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAIC,GAAL,OACN,uBAAkBV,UAAU,2FAA5B,cAAyHS,IAA9GC,YCJRC,EApBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SAPE,SAACC,GACbA,EAAEC,iBACFN,EAAWE,IAKmBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQC,KAAK,OAAOtB,UAAU,kHAAkHuB,YAAY,yBACnM,wBAAQvB,UAAU,qIAAqIsB,KAAK,SAA5J,4BC2BLE,MArCf,WACE,MAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAkCb,oBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAE3Ca,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,qCAAd,6BAKlC2B,EACE,oBAAI3B,UAAU,qCAAd,wBAGE,qBAAKA,UAAU,yBAAf,SACCyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCvBrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.5727be63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst ImageCard = ({image}) => {\r\n    const tags = image.tags.split(',');\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl-mb-\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: {image.views}</strong>\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: {image.downloads}</strong>\r\n          </li>\r\n          <li>\r\n            <strong>Likes: {image.likes}</strong>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag,index) => (\r\n            <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#{tag}</span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, {useState} from 'react';\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit =(e) => {\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                    <input onChange={e => setText(e.target.value)} type=\"text\" className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" placeholder=\"Search Image Term...\"/>\r\n                    <button className=\"flex-shrink-0 bg-indigo-500 hover:bg-teal-700 border-teal-500 hover:border-indigo-700 text-sm border-4 text-white py- px-2 rounded\" type=\"submit\">Search</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n    {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">\n            No Images Found\n          </h1>}\n\n      {\n        isLoading ?\n          <h1 className=\"text-6xl text-center mx-auto mt-32\">\n            Loading...\n          </h1>\n          : <div className=\"grid grid-cols-3 gap-4\">\n            {images.map(image => (\n              <ImageCard key={image.id} image={image} />\n            ))}\n          </div>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}